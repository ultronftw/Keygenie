{
  "id": "1749521283016",
  "timestamp": 1749521283016,
  "filePath": "README.md",
  "oldContent": "[EMPTY_FILE]",
  "content": "# KeyGenie Bot\n\nKeyGenie Bot is a Telegram bot that facilitates secure key purchases using cryptocurrency payments. It provides a user-friendly interface for selecting products, submitting payment proofs, and receiving product keys upon payment verification. Admins can manually approve payments and deliver keys to users.\n\n## Features\n\n- Browse and select products with prices in USDT.\n- Submit payment proof via transaction ID or screenshot.\n- Admin approval workflow for payment verification.\n- Payment verification cron job to automate status updates.\n- User-friendly commands and help messages.\n- Contact admin for support.\n\n## Installation\n\n### Prerequisites\n\n- Python 3.8 or higher\n- Telegram bot token (create a bot via BotFather)\n- Cryptocurrency wallet addresses for BTC, LTC, and USDT\n- Payment verification API (optional, for automatic verification)\n\n### Setup\n\n1. Clone or download the repository.\n\n2. Create and activate a Python virtual environment (recommended):\n\n```bash\npython3 -m venv venv\nsource venv/bin/activate\n```\n\n3. Install dependencies:\n\n```bash\npip install -r requirements.txt\n```\n\n4. Configure the bot by editing `config.py`:\n\n- Set your Telegram bot token in `BOT_TOKEN`.\n- Set the admin Telegram user ID in `ADMIN_ID`.\n- Set the admin Telegram username in `ADMIN_USERNAME`.\n- Set your cryptocurrency wallet addresses (`BTC_ADDRESS`, `LTC_ADDRESS`, `USDT_ADDRESS`).\n- Define your product catalog with prices and keys in `PRODUCTS`.\n- (Optional) Configure payment verification API URL and key if using automatic verification.\n\n### Running the Bot\n\nRun the bot with:\n\n```bash\npython keygenie_bot.py\n```\n\nThe bot will start polling Telegram for messages.\n\n### Running the Payment Verification Cron Job\n\nTo verify pending payments automatically, run the cron job script:\n\n```bash\npython payment_verification_cron.py\n```\n\nYou can schedule this script to run periodically using cron or a task scheduler.\n\n## Usage\n\n### User Commands\n\n- `/start` - Welcome message and introduction.\n- `/cmds` - List available commands.\n- `/buy` - Start the purchase flow.\n- `/help` - How to use the bot.\n- `/terms` - Terms and conditions.\n- `/status` - Check payment status.\n- `/contact` - Contact admin for support.\n- `/cancel` - Cancel current operation.\n\n### Admin Commands\n\n- `/approve <user_id>` - Approve a user's payment and send the product key.\n\n## Important Notes\n\n- Payment verification is manual by default. Automatic verification can be enabled via the config.\n- User purchase data and logs are stored in `user_data.json` and `payment_verification_cron.log`.\n- Keep your bot token and admin ID confidential.\n\n## Contact\n\nFor support or inquiries, contact the admin: [@darkerrrrrrrrrrrrr](https://t.me/darkerrrrrrrrrrrrr)\n\n---\n\nThank you for using KeyGenie Bot!\n",
  "diff": "@@ -1,1 +1,98 @@\n-[EMPTY_FILE]\n\\ No newline at end of file\n+# KeyGenie Bot\n+\n+KeyGenie Bot is a Telegram bot that facilitates secure key purchases using cryptocurrency payments. It provides a user-friendly interface for selecting products, submitting payment proofs, and receiving product keys upon payment verification. Admins can manually approve payments and deliver keys to users.\n+\n+## Features\n+\n+- Browse and select products with prices in USDT.\n+- Submit payment proof via transaction ID or screenshot.\n+- Admin approval workflow for payment verification.\n+- Payment verification cron job to automate status updates.\n+- User-friendly commands and help messages.\n+- Contact admin for support.\n+\n+## Installation\n+\n+### Prerequisites\n+\n+- Python 3.8 or higher\n+- Telegram bot token (create a bot via BotFather)\n+- Cryptocurrency wallet addresses for BTC, LTC, and USDT\n+- Payment verification API (optional, for automatic verification)\n+\n+### Setup\n+\n+1. Clone or download the repository.\n+\n+2. Create and activate a Python virtual environment (recommended):\n+\n+```bash\n+python3 -m venv venv\n+source venv/bin/activate\n+```\n+\n+3. Install dependencies:\n+\n+```bash\n+pip install -r requirements.txt\n+```\n+\n+4. Configure the bot by editing `config.py`:\n+\n+- Set your Telegram bot token in `BOT_TOKEN`.\n+- Set the admin Telegram user ID in `ADMIN_ID`.\n+- Set the admin Telegram username in `ADMIN_USERNAME`.\n+- Set your cryptocurrency wallet addresses (`BTC_ADDRESS`, `LTC_ADDRESS`, `USDT_ADDRESS`).\n+- Define your product catalog with prices and keys in `PRODUCTS`.\n+- (Optional) Configure payment verification API URL and key if using automatic verification.\n+\n+### Running the Bot\n+\n+Run the bot with:\n+\n+```bash\n+python keygenie_bot.py\n+```\n+\n+The bot will start polling Telegram for messages.\n+\n+### Running the Payment Verification Cron Job\n+\n+To verify pending payments automatically, run the cron job script:\n+\n+```bash\n+python payment_verification_cron.py\n+```\n+\n+You can schedule this script to run periodically using cron or a task scheduler.\n+\n+## Usage\n+\n+### User Commands\n+\n+- `/start` - Welcome message and introduction.\n+- `/cmds` - List available commands.\n+- `/buy` - Start the purchase flow.\n+- `/help` - How to use the bot.\n+- `/terms` - Terms and conditions.\n+- `/status` - Check payment status.\n+- `/contact` - Contact admin for support.\n+- `/cancel` - Cancel current operation.\n+\n+### Admin Commands\n+\n+- `/approve <user_id>` - Approve a user's payment and send the product key.\n+\n+## Important Notes\n+\n+- Payment verification is manual by default. Automatic verification can be enabled via the config.\n+- User purchase data and logs are stored in `user_data.json` and `payment_verification_cron.log`.\n+- Keep your bot token and admin ID confidential.\n+\n+## Contact\n+\n+For support or inquiries, contact the admin: [@darkerrrrrrrrrrrrr](https://t.me/darkerrrrrrrrrrrrr)\n+\n+---\n+\n+Thank you for using KeyGenie Bot!\n",
  "description": "File modification",
  "taskId": "1749521068191",
  "revisionNumber": 1
}