{
  "id": "1749523029824",
  "timestamp": 1749523029824,
  "filePath": "push_to_github.sh",
  "oldContent": "#!/bin/bash\n\n# Kill any running instances of the Telegram bot\npkill -f \"python keygenie_bot.py\" && sleep 2\n\n# Set git user config globally if not already set\nif ! git config --global user.name &>/dev/null; then\n  git config --global user.name \"UltronFTW\"\nfi\n\nif ! git config --global user.email &>/dev/null; then\n  git config --global user.email \"ultronftw@hotmail.com\"\nfi\n\n# Navigate to the project directory or current directory if none specified\nPROJECT_DIR=\"${1:-.}\"\ncd \"$PROJECT_DIR\" || { echo \"Directory not found: $PROJECT_DIR\"; exit 1; }\n\n# Initialize git repository if not initialized\nif [ ! -d \".git\" ]; then\n  git init\nfi\n\n# Check if remote 'origin' exists, set or add accordingly\nif git remote | grep -q ^origin$; then\n  git remote set-url origin https://github.com/ultronftw/Keygenie.git\nelse\n  git remote add origin https://github.com/ultronftw/Keygenie.git\nfi\n\n# Stage all changes (respecting .gitignore to exclude junk and large files)\ngit add .\n\n# Commit only if there are staged changes\nif ! git diff --cached --quiet; then\n  git commit -m \"Commit changes pushing code to GitHub\"\nfi\n\n# Check for large files and track them with Git LFS if necessary\nif git lfs track \"*.largefileextension\"; then\n  git add .gitattributes\n  git commit -m \"Track large files with Git LFS\"\nfi\n\n# Check current branch and push to the correct branch\nCURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)\ngit push -u origin \"$CURRENT_BRANCH\"\n\n# Verify and output status\ngit status",
  "content": "#!/bin/bash\n\n# Kill any running instances of the Telegram bot\npkill -f \"python keygenie_bot.py\" && sleep 2\n\n# Set git user config globally if not already set\nif ! git config --global user.name &>/dev/null; then\n  git config --global user.name \"UltronFTW\"\nfi\n\nif ! git config --global user.email &>/dev/null; then\n  git config --global user.email \"ultronftw@hotmail.com\"\nfi\n\n# Navigate to the project directory or current directory if none specified\nPROJECT_DIR=\"${1:-.}\"\ncd \"$PROJECT_DIR\" || { echo \"Directory not found: $PROJECT_DIR\"; exit 1; }\n\n# Initialize git repository if not initialized\nif [ ! -d \".git\" ]; then\n  git init\nfi\n\n# Check if remote 'origin' exists, set or add accordingly\nif git remote | grep -q ^origin$; then\n  git remote set-url origin https://github.com/ultronftw/Keygenie.git\nelse\n  git remote add origin https://github.com/ultronftw/Keygenie.git\nfi\n\n# Stage all changes (respecting .gitignore to exclude junk and large files)\ngit add .\n\n# Commit only if there are staged changes\nif ! git diff --cached --quiet; then\n  git commit -m \"Commit changes pushing code to GitHub\"\nfi\n\nCURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)\ngit push -u origin \"$CURRENT_BRANCH\"\n\n# Verify and output status\ngit status\n",
  "diff": "@@ -35,16 +35,9 @@\n if ! git diff --cached --quiet; then\n   git commit -m \"Commit changes pushing code to GitHub\"\n fi\n \n-# Check for large files and track them with Git LFS if necessary\n-if git lfs track \"*.largefileextension\"; then\n-  git add .gitattributes\n-  git commit -m \"Track large files with Git LFS\"\n-fi\n-\n-# Check current branch and push to the correct branch\n CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)\n git push -u origin \"$CURRENT_BRANCH\"\n \n # Verify and output status\n-git status\n\\ No newline at end of file\n+git status\n",
  "description": "File modification",
  "taskId": "1749522251087",
  "revisionNumber": 1
}